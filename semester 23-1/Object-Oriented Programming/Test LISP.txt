Alfredo Bautista RÃ­os

Problema numero 1
(defun firstLast (L1 L2)
           (list
             (first L1)
             (last L2)
             )
           )


Problema numero 2
(defun secondHalf (L1)
  (reverse 
    (butlast (reverse L1) (/ (length L1) 2))
  )
)

Problema numero 3
(defun zerolist (n)
  (make-list n :initial-element 0)
)


Problema numero 4
(defun mirror (L1)
          (append L1 (reverse L1)) )


Problema numero 5
(defun lista (n)
  (setq L1 '())
  (Do ((i n (1- i)))
    ((= i 0) 'FIN)
    (setq L1 (cons i L))
  )
  (print L1)
)


Problema numero 6
(defun binario (n)
  (setq L1 '())
  (Do ((i n (1- i)))
    ((= i 0) 'FIN)
    (setq L1 (cons i L1))
  )
  (format T "~B" L1)
)

Problema numero 7
(defun promedio (L1)
  (/ (apply '+ L1) (length L1))
)


Problema numero 8
(DEFUN TODOSPARES (LISTA)
           (IF (NULL LISTA) T (AND (EVENP (CAR LISTA)) (TODOSPARES (CDR LISTA))) )
           )
(DEFUN PARES (LISTA)
           (IF (TODOSPARES LISTA) (FORMAT T "TODOS SON PARES")(FORMAT T "NO TODOS SON PARES"))
           )




Extras
(defun hexa (n)
	(format T "~x " N)
		)
(defun hexadecimal (h) (mapcar 'hexa h))


